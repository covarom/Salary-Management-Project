// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryManagement.Infrastructure.Persistence;

#nullable disable

namespace SalaryManagement.Infrastructure.Migrations
{
    [DbContext(typeof(SalaryManagementContext))]
    [Migration("20230219121523_AddHolidayNameColumnToHoliday")]
    partial class AddHolidayNameColumnToHoliday
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Admin", b =>
                {
                    b.Property<string>("AdminId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("admin_id");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("AdminId")
                        .HasName("PRIMARY");

                    b.ToTable("admins", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("company_name");

                    b.HasKey("CompanyId")
                        .HasName("PRIMARY");

                    b.ToTable("companys", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Contract", b =>
                {
                    b.Property<string>("ContractId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contract_id");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("double")
                        .HasColumnName("basic_salary");

                    b.Property<double?>("Bhxh")
                        .HasColumnType("double")
                        .HasColumnName("bhxh");

                    b.Property<string>("ContractStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contract_status_id");

                    b.Property<string>("ContractTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contract_type_id");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("File")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Job")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("job");

                    b.Property<string>("PartnerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("partner_id");

                    b.Property<double?>("PartnerPrice")
                        .HasColumnType("double")
                        .HasColumnName("partner_price");

                    b.Property<string>("SalaryTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salary_type_id");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<double?>("Tax")
                        .HasColumnType("double");

                    b.HasKey("ContractId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ContractStatusId" }, "contract_status_id");

                    b.HasIndex(new[] { "ContractTypeId" }, "contract_type_id");

                    b.HasIndex(new[] { "EmployeeId" }, "employee_id");

                    b.HasIndex(new[] { "PartnerId" }, "partner_id");

                    b.HasIndex(new[] { "SalaryTypeId" }, "salary_type_id");

                    b.ToTable("contracts", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.ContractStatus", b =>
                {
                    b.Property<string>("ContractStatusId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contract_status_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("StatusName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status_name");

                    b.HasKey("ContractStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("contract_status", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.ContractType", b =>
                {
                    b.Property<string>("ContractTypeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contract_type_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("ContractTypeId")
                        .HasName("PRIMARY");

                    b.ToTable("contract_types", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<int?>("IdentifyNumber")
                        .HasColumnType("int")
                        .HasColumnName("identify_number");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("EmployeeId")
                        .HasName("PRIMARY");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Holiday", b =>
                {
                    b.Property<string>("HolidayId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("holiday_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("HolidayId")
                        .HasName("PRIMARY");

                    b.ToTable("holidays", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.LeaveLog", b =>
                {
                    b.Property<string>("LeaveTimeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("leave_time_id");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("LeaveTimeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmployeeId" }, "employee_id")
                        .HasDatabaseName("employee_id1");

                    b.ToTable("leave_logs", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.OvertimeLog", b =>
                {
                    b.Property<string>("OvertimeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("overtime_id");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_id");

                    b.Property<int?>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("hours");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<DateTime?>("OvertimeDay")
                        .HasColumnType("date")
                        .HasColumnName("overtime_day");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("OvertimeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmployeeId" }, "employee_id")
                        .HasDatabaseName("employee_id2");

                    b.ToTable("overtime_logs", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Payroll", b =>
                {
                    b.Property<string>("PayrollId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payroll_id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<double?>("Tax")
                        .HasColumnType("double")
                        .HasColumnName("tax");

                    b.Property<double?>("Total")
                        .HasColumnType("double")
                        .HasColumnName("total");

                    b.HasKey("PayrollId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmployeeId" }, "employee_id")
                        .HasDatabaseName("employee_id3");

                    b.ToTable("payrolls", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.SalaryType", b =>
                {
                    b.Property<string>("SalaryTypeId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salary_type_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDeleted");

                    b.Property<string>("SalaryTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salary_type_name");

                    b.HasKey("SalaryTypeId")
                        .HasName("PRIMARY");

                    b.ToTable("salary_types", (string)null);
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Contract", b =>
                {
                    b.HasOne("SalaryManagement.Domain.Entities.ContractStatus", "ContractStatus")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractStatusId")
                        .IsRequired()
                        .HasConstraintName("contracts_ibfk_4");

                    b.HasOne("SalaryManagement.Domain.Entities.ContractType", "ContractType")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired()
                        .HasConstraintName("contracts_ibfk_2");

                    b.HasOne("SalaryManagement.Domain.Entities.Employee", "Employee")
                        .WithMany("Contracts")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("contracts_ibfk_1");

                    b.HasOne("SalaryManagement.Domain.Entities.Company", "Partner")
                        .WithMany("Contracts")
                        .HasForeignKey("PartnerId")
                        .IsRequired()
                        .HasConstraintName("contracts_ibfk_5");

                    b.HasOne("SalaryManagement.Domain.Entities.SalaryType", "SalaryType")
                        .WithMany("Contracts")
                        .HasForeignKey("SalaryTypeId")
                        .IsRequired()
                        .HasConstraintName("contracts_ibfk_3");

                    b.Navigation("ContractStatus");

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("Partner");

                    b.Navigation("SalaryType");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.LeaveLog", b =>
                {
                    b.HasOne("SalaryManagement.Domain.Entities.Employee", "Employee")
                        .WithMany("LeaveLogs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("leave_logs_ibfk_1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.OvertimeLog", b =>
                {
                    b.HasOne("SalaryManagement.Domain.Entities.Employee", "Employee")
                        .WithMany("OvertimeLogs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("overtime_logs_ibfk_1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Payroll", b =>
                {
                    b.HasOne("SalaryManagement.Domain.Entities.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("payrolls_ibfk_1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Company", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.ContractStatus", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.ContractType", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("LeaveLogs");

                    b.Navigation("OvertimeLogs");

                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("SalaryManagement.Domain.Entities.SalaryType", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
